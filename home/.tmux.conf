## Global options

# remap prefix to Control + a
unbind-key C-b
set-option -g prefix C-a

# terminal title
set-option -g set-titles on
#set-option -g set-titles-string '#h - #W'
# set-option -g set-titles-string "#h-#W:#(pwd)"
# set-option -g set-titles-string "#T"
set-option -g set-titles-string "#{session_name} - #{host}"

# improve colors
#set-option -g default-terminal "screen-256color"
set-option -g default-terminal "screen-256color"
set-option -g pane-active-border-fg green

# set status line colors
set-option -g status-bg black
set-option -g status-fg white

# show user and  host name in status line
set-option -g status-left ''
set-option -g status-right '#[fg=green,bold] #(whoami)@#(hostname -f)#[default]'

# start window numbers at 1
set-option -g base-index 1

# renumber windows sequentially after closing any of them
set-option -g renumber-windows on

# increase scrollback lines
set-option -g history-limit 10000

# vi
set-option -g status-keys vi

# don't wait after pressing Esc
set-option -sg escape-time 0


## Window options

# window status
set-window-option -g window-status-format '#[fg=white,nobold]#I:#W'
set-window-option -g window-status-current-format '#[fg=yellow,bold,underscore]#I:#W'

# act like vim
set-window-option -g mode-keys vi

# start pane numbers at 1
set-window-option -g pane-base-index 1

# 24 hour clock
set-window-option -g clock-mode-style 24

# rename window to reflect current program
set-window-option -g automatic-rename on

# resize a window based on the smallest client actually viewing it
# set-window-option -g aggresive-resize on

# ?
set-window-option -g xterm-keys on


## Bindings

# send prefix to nested tmux
bind-key a send-prefix

# reload tmux conf
bind-key r source-file ~/.tmux.conf

# move between windows
bind-key -r C-Left previous-window
bind-key -r C-Right next-window

# go to last pane or last window
bind-key C-a if-shell 'test $(tmux list-panes | wc -l) -gt 1' 'last-pane' 'last-window'

# swap windows
bind-key -r , swap-window -t -1
bind-key -r . swap-window -t +1

# split windows
bind-key | split-window -h
bind-key - split-window -v

# move between panes
unbind-key Left
unbind-key Down
unbind-key Up
unbind-key Right
bind-key -r h select-pane -L
bind-key -r j select-pane -D
bind-key -r k select-pane -U
bind-key -r l select-pane -R

# resize panes
unbind-key C-Up
unbind-key C-Down
unbind-key C-Left
unbind-key C-Right
bind-key -r C-h resize-pane -L
bind-key -r C-j resize-pane -D
bind-key -r C-k resize-pane -U
bind-key -r C-l resize-pane -R

# pane movement
bind-key j command-prompt -p "join pane from:"  "join-pane -s '%%'"

# smart pane switching with awareness of vim splits
bind-key -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind-key -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind-key -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind-key -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
bind-key -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"
